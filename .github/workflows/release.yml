name: Release

on:
  workflow_run:
    workflows: ["Parallel Component Validation"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  # ==========================================
  # RELEASE GATE VERIFICATION
  # ==========================================
  
  verify-build-success:
    name: üîç Verify Build Success
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    outputs:
      release-approved: ${{ steps.verify.outputs.approved }}
    steps:
      - name: Verify parallel build passed
        id: verify
        run: |
          echo "Verifying that parallel component validation succeeded..."
          if [[ "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
            echo "‚úÖ Parallel component validation passed"
            echo "approved=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Parallel component validation failed"
            echo "approved=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Log release approval
        run: |
          echo "üéâ All platform components validated successfully!"
          echo "‚úÖ Frontend (SvelteKit) - Build, lint, test, type-check passed"
          echo "‚úÖ GraphQL Server (Node.js) - Build, lint, test, type-check passed"  
          echo "‚úÖ Mobile App (Flutter) - Build, analyze, test passed"
          echo "‚úÖ Database (MongoDB + Neo4j) - Schema validation passed"
          echo "‚úÖ Integration tests - API connectivity verified"
          echo "‚úÖ Docker builds - All images build successfully"
          echo ""
          echo "üöÄ PROCEEDING WITH RELEASE"

  # ==========================================
  # SEMANTIC RELEASE
  # ==========================================
  
  release:
    name: üöÄ Semantic Release
    runs-on: ubuntu-latest
    needs: verify-build-success
    if: needs.verify-build-success.outputs.release-approved == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use the commit that triggered the original workflow
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Verify dependency integrity
        run: npm audit signatures

      - name: Download build artifacts from parallel validation
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify build artifacts exist
        run: |
          echo "Verifying build artifacts from parallel validation..."
          if [ -d "frontend-build" ]; then
            echo "‚úÖ Frontend build artifacts found"
          else
            echo "‚ùå Frontend build artifacts missing"
            exit 1
          fi
          
          if [ -d "server-build" ]; then
            echo "‚úÖ Server build artifacts found"
          else
            echo "‚ùå Server build artifacts missing"
            exit 1
          fi
          
          if [ -f "mobile-app-debug-apk" ]; then
            echo "‚úÖ Mobile app build artifacts found"
          else
            echo "‚ö†Ô∏è Mobile app artifacts not found (may be expected)"
          fi

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üöÄ Starting semantic release process..."
          echo "All platform components have been validated and built successfully"
          npm run semantic-release

      - name: Release summary
        if: success()
        run: |
          echo "‚úÖ RELEASE COMPLETED SUCCESSFULLY!"
          echo ""
          echo "üìã Release Summary:"
          echo "‚Ä¢ All 4 platform components validated ‚úÖ"
          echo "‚Ä¢ Integration tests passed ‚úÖ"  
          echo "‚Ä¢ Docker images built ‚úÖ"
          echo "‚Ä¢ Security scans completed ‚úÖ"
          echo "‚Ä¢ Semantic release published ‚úÖ"
          echo ""
          echo "üéâ otw.sport platform release is live!"

  # ==========================================
  # RELEASE FAILURE HANDLING
  # ==========================================
  
  release-failed:
    name: üö´ Release Failed
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'success'
    steps:
      - name: Log failure reason
        run: |
          echo "‚ùå RELEASE BLOCKED"
          echo ""
          echo "The parallel component validation workflow failed."
          echo "Workflow conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo ""
          echo "üîß Required actions:"
          echo "1. Check the parallel build workflow for specific failures"
          echo "2. Fix any failing components:"
          echo "   ‚Ä¢ Frontend (SvelteKit)"
          echo "   ‚Ä¢ GraphQL Server (Node.js)" 
          echo "   ‚Ä¢ Mobile App (Flutter)"
          echo "   ‚Ä¢ Database (MongoDB + Neo4j)"
          echo "   ‚Ä¢ Integration tests"
          echo "   ‚Ä¢ Docker builds"
          echo "3. Push fixes to trigger new validation"
          echo "4. Only when ALL components pass will release proceed"
          echo ""
          echo "üö´ No release will be created until all validations pass"
          
      - name: Create issue for failed release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö´ Release blocked - Component validation failed`,
              body: `## Release Blocked ‚ùå
              
              The release process was blocked because the parallel component validation failed.
              
              **Failure Details:**
              - Workflow: ${{ github.event.workflow_run.name }}
              - Conclusion: ${{ github.event.workflow_run.conclusion }}
              - Run ID: ${{ github.event.workflow_run.id }}
              - Commit: ${{ github.event.workflow_run.head_sha }}
              
              **Action Required:**
              1. Review the [failed workflow run](${{ github.event.workflow_run.html_url }})
              2. Fix all component validation failures
              3. Push fixes to main branch
              4. Verify all components pass validation
              
              **Components that must pass:**
              - [ ] Frontend (SvelteKit) - build, lint, test, type-check
              - [ ] GraphQL Server (Node.js) - build, lint, test, type-check  
              - [ ] Mobile App (Flutter) - build, analyze, test
              - [ ] Database (MongoDB + Neo4j) - schema validation
              - [ ] Integration tests - API connectivity
              - [ ] Docker builds - image creation
              
              Release will automatically proceed once all validations pass. ‚úÖ`,
              labels: ['release', 'blocked', 'bug']
            })